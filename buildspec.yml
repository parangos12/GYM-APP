version: 0.2

env:
  variables:
    CLUSTER: "Gym-App-Cluster"
    SERVICE: "Trainee-Microservice-ALB-Gym"
    IMAGE_TAG: "trainee-microservice"

phases:
  pre_build:
    commands:
      - mvn clean package -DskipTests 
      - echo Logging in to Amazon ECR...
      - aws --version
      - echo Logging in to Docker Hub...
      - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=907494211918.dkr.ecr.us-east-1.amazonaws.com/gym-app-ecr
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"traineeMicroservice","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
      - echo Actualizando servicio Fargate...
      - aws ecs update-service --cluster $CLUSTER --service $SERVICE
artifacts:
  files:
   - imagedefinitions.json
   - target/epam-gym-app-0.0.1-SNAPSHOT
